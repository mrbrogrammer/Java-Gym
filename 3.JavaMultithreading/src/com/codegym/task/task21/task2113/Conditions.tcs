taskKey="com.codegym.task.task21.task2113.big07"\n\nHippodrome (part 7)


But that&#39;s not all. We need to make the horses run.
Add run, move, and print methods to the Hippodrome class. Without parameters.
The move method will control the movement of all horses.
The print method will draw them on the screen.
And the run method manages it all.


Требования:
1.	A run method with no parameters must be created in the Hippodrome class.
2.	A move method with no parameters must be created in the Hippodrome class.
3.	A print method with no parameters must be created in the Hippodrome class.


Hippodrome (part 7)


Now let&#39;s move on to the Hippodrome class and the main method.
We need to create a Hippodrome object and add some horses to it.

To start, in the Hippodrome class:
Create a static Hippodrome game field.

The main method requires the following:
a) Create a Hippodrome object and save it in the game field.
b) Create three Horse objects. Make up their names yourself. Each horse&#39;s initial speed is 3, and its distance is 0.
c) Add the created horses to the hippodrome&#39;s list of horses (horses). You can use the getHorses method to get the list of horses.



Hippodrome (part 7)


Finish writing the Horse class.
Add a constructor with name, speed, and distance parameters.
Add getters and setters for all the fields in the Horse class.
Make all of the methods public unless indicated otherwise.



Hippodrome (part 7)


Now back to the horses. Every horse in a horse race must have a name and speed.
Our horses will simply run a certain amount of time (100 seconds or &quot;steps&quot;).
The horse that runs the farthest is the winner.
Accordingly, we&#39;ll also need to store the distance the horse has already run.

Add String name, double speed, and double distance variables to the Horse class.



Hippodrome (part 7)


Even though we&#39;ve declared the horses variable, we haven&#39;t yet created the list itself (unless of course you&#39;ve managed to get ahead of us).
Create a Hippodrome class constructor with one List parameter.
Save the passed list in the horses field (initialize the horses field).



Hippodrome (part 7)


Hey, we&#39;ve got a hippodrome, and it should have some horses.
So our hippodrome should store a list of its horses.
Add a List&lt;Horse&gt; horses field to the Hippodrome class.
And to ensure that the horses won&#39;t be stolen, make this field private.
Add a getter for this field.



